{"version":3,"sources":["component/Header.js","component/Format.js","component/Books.js","component/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Format","item","country","cases","deaths","recovered","last_update","Books","items","isLoading","map","id","Pagination","postsPerPage","totalpage","paginate","pageNumber","i","Math","ceil","push","number","href","onClick","App","useState","setItems","setIsLoading","currentPage","setcurrentPage","page","useEffect","a","axios","result","console","log","data","fetchItems","indexOfLastPage","indexofFirstPage","currentPost","slice","isloading","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAUeA,EARA,WACX,OACI,qBAAKC,UAAU,SAAf,SACG,uDCeIC,EAlBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACb,OACI,qBAAKF,UAAU,YAAf,SAEI,qBAAKA,UAAU,OAAf,SACE,+BACI,+BAAI,8CAAJ,IAA+BE,EAAKC,WACpC,+BAAI,4CAAJ,IAA6BD,EAAKE,SAClC,+BAAI,6CAAJ,IAA8BF,EAAKG,UACnC,+BAAI,gDAAJ,IAAiCH,EAAKI,aACtC,+BAAI,mDAA+BJ,EAAKK,uBCE3CC,EAVD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MACb,OADoC,EAAfC,UACD,2CAAsB,yBAASV,UAAU,QAAnB,SACnCS,EAAME,KAAI,SAACT,GAAD,OACR,8BACA,cAAC,EAAD,CAAQF,UAAU,QAAsBE,KAAMA,GAAfA,EAAKU,Y,yBCajCC,EAnBI,SAAC,GAIhB,IAJ0D,IAAzCC,EAAwC,EAAxCA,aAAeC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SAErCC,EAAa,GAEXC,EAAE,EAAEA,GAAGC,KAAKC,KAAKL,EAAYD,GAAeI,IAChDD,EAAWI,KAAKH,GAEpB,OACI,8BACI,8BACI,6BAAKD,EAAWN,KAAI,SAAAW,GAAM,OACtB,oBAAItB,UAAU,QAAd,SAAsB,mBAAGuB,KAAK,KAAKC,QAAS,kBAAMR,EAASM,IAArC,SAA+CA,gBCmC1EG,MAtCf,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAENjB,EAFM,KAEAkB,EAFA,OAGkBD,oBAAS,GAH3B,mBAGNhB,EAHM,KAGIkB,EAHJ,OAMuBF,mBAAS,GANhC,mBAMNG,EANM,KAMOC,EANP,OAOAJ,mBAAS,IAAfK,EAPM,oBASbC,qBAAW,YACO,uCAAE,4BAAAC,EAAA,sEACKC,IAAM,sCADX,OACVC,EADU,OAEhBC,QAAQC,IAAIF,EAAOG,MACnBX,EAASQ,EAAOG,MAChBV,GAAa,GAJG,2CAAF,qDAMhBW,KACC,IAEH,IAAMC,EAAkBX,EAAcE,EAChCU,EAAmBD,EAAkBT,EACrCW,EAAcjC,EAAMkC,MAAMF,EAAkBD,GAKlD,OACE,sBAAKxC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAO4C,UAAWlC,EAAWD,MAAOiC,IACpC,cAAC,EAAD,CAAY5B,aAAciB,EAAMhB,UAAYN,EAAMoC,OAAQ7B,SAN7C,SAAAC,GAAU,OAAIa,EAAeb,UCtBjC6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5d1d5af1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n           <p>Covid 19 status log</p> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Format = ({item}) => {\r\n    return (\r\n        <div className=\"container\">\r\n       \r\n            <div className=\"card\">\r\n              <ul>\r\n                  <li><strong>Country:</strong> {item.country}</li>\r\n                  <li><strong>Cases:</strong> {item.cases}</li>\r\n                  <li><strong>Deaths:</strong> {item.deaths}</li>\r\n                  <li><strong>Recovered:</strong> {item.recovered}</li>\r\n                  <li><strong>Last Status: </strong>{item.last_update}</li>\r\n              </ul>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Format\r\n","import React from 'react'\r\nimport Format from './Format'\r\n\r\n\r\nconst Books = ({items , isLoading}) => {\r\n   return isLoading ? (<p>loading...</p>) : (<section className=\"cards\">\r\n         {items.map((item) => (\r\n            <div>\r\n            <Format className=\"books\" key={item.id} item={item}/>\r\n            </div>\r\n         ))}\r\n   </section>)\r\n}\r\n//\r\nexport default Books\r\n\r\n","import React from 'react'\r\n\r\nconst Pagination = ({postsPerPage , totalpage ,paginate}) => {\r\n\r\n    const pageNumber = [];\r\n\r\n    for(let i=1;i<=Math.ceil(totalpage / postsPerPage); i++){\r\n        pageNumber.push(i);\r\n    }\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <ul>{pageNumber.map(number =>(\r\n                    <li className=\"pagUL\"><a href=\"!#\" onClick={() => paginate(number)}>{number}</a></li>\r\n                ))}\r\n                \r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination\r\n","import React, { useState,useEffect} from 'react'\nimport Header from './component/Header'\nimport Books from './component/Books'\nimport './App.css'\nimport axios from 'axios'\nimport Pagination from './component/Pagination'\n\n\n\n\nfunction App() {\n \n  const [items,setItems] =useState([])\n  const [isLoading,setIsLoading]=useState(true)\n\n//Pagination part\n  const [currentPage, setcurrentPage]=useState(1)\n  const [page]=useState(12)\n\n  useEffect( () => {\n    const fetchItems =async () =>{\n      const result = await axios(`https://covid19-api.org/api/status`)\n      console.log(result.data)\n      setItems(result.data)\n      setIsLoading(false)\n    }\n    fetchItems()\n  }, [])\n\n  const indexOfLastPage = currentPage * page;\n  const indexofFirstPage = indexOfLastPage - page;\n  const currentPost = items.slice(indexofFirstPage ,indexOfLastPage);\n\n \n  const paginate = pageNumber => setcurrentPage(pageNumber);\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Books isloading={isLoading} items={currentPost} />\n      <Pagination postsPerPage={page} totalpage ={items.length} paginate={paginate}/>\n      \n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}